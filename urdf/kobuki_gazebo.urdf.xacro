<?xml version="1.0"?>

<robot name="kobuki_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="kobuki_sim">
      <gazebo reference="wheel_left_link">
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
      </gazebo>

      <gazebo reference="wheel_right_link">
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
      </gazebo>

      <gazebo reference="caster_front_link">
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
      </gazebo>

      <gazebo reference="caster_back_link">
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel>
      </gazebo>

      <gazebo reference="base_link">
        <mu1>0.3</mu1>
        <mu2>0.3</mu2>
        <sensor type="contact" name="bumpers">
          <always_on>1</always_on>
          <update_rate>50.0</update_rate>
          <visualize>true</visualize>
          <contact>
            <collision>base_footprint_fixed_joint_lump__base_collision</collision>
          </contact>
        </sensor>
      </gazebo>

      <gazebo reference="cliff_sensor_left_link">
        <sensor type="ray" name="cliff_sensor_left">
          <always_on>true</always_on>
          <update_rate>50</update_rate>
          <visualize>true</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>50</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
                <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
              </horizontal>
            <!-- Cannot use vertical rays until this bug is resolved -->
            <!-- https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
            <!-- <vertical> -->
            <!--     <samples>50</samples> -->
            <!--     <resolution>1.0</resolution> -->
            <!--     <min_angle>-0.0436</min_angle>  -2.5 degree -->
            <!--     <max_angle>0.0436</max_angle> 2.5 degree -->
            <!-- </vertical> -->
            </scan>
            <range>
              <min>0.01</min>
              <max>0.15</max>
              <resolution>1.0</resolution>
            </range>
          </ray>
        </sensor>
      </gazebo>

      <gazebo reference="cliff_sensor_right_link">
        <sensor type="ray" name="cliff_sensor_right">
          <always_on>true</always_on>
          <update_rate>50</update_rate>
          <visualize>true</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>50</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
                <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
              </horizontal>
            <!-- Cannot use vertical rays until this bug is resolved -->
            <!-- https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
            <!-- <vertical> -->
            <!--     <samples>50</samples> -->
            <!--     <resolution>1.0</resolution> -->
            <!--     <min_angle>-0.0436</min_angle>  -2.5 degree -->
            <!--     <max_angle>0.0436</max_angle> 2.5 degree -->
            <!-- </vertical> -->
            </scan>
            <range>
              <min>0.01</min>
              <max>0.15</max>
              <resolution>1.0</resolution>
            </range>
          </ray>
        </sensor>
      </gazebo>

      <gazebo reference="cliff_sensor_front_link">
        <sensor type="ray" name="cliff_sensor_front">
          <always_on>true</always_on>
          <update_rate>50</update_rate>
          <visualize>true</visualize>
          <ray>
            <scan>
              <horizontal>
                <samples>50</samples>
                <resolution>1.0</resolution>
                <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
                <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
              </horizontal>
            <!-- Cannot use vertical rays until this bug is resolved -->
            <!-- https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
            <!-- <vertical> -->
            <!--     <samples>50</samples> -->
            <!--     <resolution>1.0</resolution> -->
            <!--     <min_angle>-0.0436</min_angle>  -2.5 degree -->
            <!--     <max_angle>0.0436</max_angle> 2.5 degree -->
            <!-- </vertical> -->
            </scan>
            <range>
              <min>0.01</min>
              <max>0.15</max>
              <resolution>1.0</resolution>
            </range>
          </ray>
        </sensor>
      </gazebo>

      <gazebo reference="gyro_link">
       <sensor type="imu" name="imu">
        <plugin name="gazebo_ros_imu_controller" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <argument>--ros-args</argument>
            <argument>-r</argument>
            <argument>~/out:=imu</argument>
          </ros>
          <output_type>sensor_msgs/msg/Imu</output_type>
          <body_name>gyro_link</body_name>
          <frame_name>gyro_link</frame_name>
        </plugin>
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>false</visualize>
        <imu>
          <!-- based on original and https://github.com/ros-simulation/gazebo_ros_pkgs/files/2298904/gazebo_ros_imu_sensor.world.txt -->
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${0.0014*0.0014}</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${0.0014*0.0014}</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>${0.0014*0.0014}</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
          </imu>
      </sensor>
      </gazebo>

      <gazebo>
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <update_rate>50</update_rate>
        <left_joint>wheel_left_joint</left_joint>
        <right_joint>wheel_right_joint</right_joint>
        <wheel_separation>0.230</wheel_separation>
        <wheel_diameter>0.070</wheel_diameter>
        <max_wheel_torque>1.0</max_wheel_torque>
        <max_wheel_acceleration>1.0</max_wheel_acceleration>
        <command_topic>cmd_vel</command_topic>
        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>false</publish_wheel_tf>
        <odometry_topic>odom</odometry_topic>
        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_footprint</robot_base_frame>
        </plugin>

        <!-- publish ground truth -->
        <plugin name="p3d_ground_truth" filename="libgazebo_ros_p3d.so">
            <always_on>true</always_on>
            <update_rate>50.0</update_rate>
            <body_name>base_footprint</body_name>
            <gaussian_noise>0.001</gaussian_noise>
            <frame_name>world</frame_name>
            <xyz_offset>0 0 0</xyz_offset>
            <rpy_offset>0 0 0</rpy_offset>
            <ros>
              <!--https://github.com/ros-simulation/gazebo_ros_pkgs/issues/1318-->
              <remapping>odom:=ground_truth</remapping>
            </ros>

        </plugin>

      <plugin name="kobuki_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
        <ros>
          <remapping>~/out:=joint_states</remapping>
        </ros>
        <update_rate>50</update_rate>
        <joint_name>wheel_left_joint</joint_name>
        <joint_name>wheel_right_joint</joint_name>
      </plugin>

      </gazebo>
  </xacro:macro>
</robot>
